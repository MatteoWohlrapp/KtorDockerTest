swagger: "2.0"
info:
  description: 'Documentation of the sportify backend.'
  version: "0.1.0"
  title: "Sportify"
  contact:
    email: "marco.seidel@envidual.com"
host: "sportify.envidual.com"
schemes:
- "https"
tags:
  - name: "Score"
  - name: "User"
paths:
  /score:
    get:
      tags:
        - "Score"
      summary: "Get users with their highscores by exercise"
      parameters:
        - name: "id"
          in: "query"
          type: "integer"
          format: "int64"
          description: "Identifier of the searched user"
        - name: "window"
          in: "query"
          type: "integer"
          format: "int64"
          description: "Only scores reaching back in the window are included"
        - name: "highscore"
          in: "query"
          type: "boolean"
          description: "All or only the highest scores for the respective exercises"
      responses:
        "200":
          description: "List aquired"
          schema:
            type: array
            items:  
              $ref: "#/definitions/Score"     
    put:
      tags:
        - "Score"
      summary: "Post a new score"
      parameters:
        - name: "body"
          in: "body"
          schema:
            $ref: "#/definitions/Score"
      responses:
        "200":
          description: "Score got stored"
  
  /user:
    get:
      tags:
        - "User"
      summary: "Get a list of specified users"
      parameters:
        - name: "ids"
          in: "query"
          type: "array"
          items:
            type: "integer"
            format: "uint64"
          description: "The identifiers of the searched users"
      responses:
        "200":
          description: "Users aquired"
          schema:
            type: "array"
            items: 
              $ref: "#/definitions/User"
    post:
      tags:
        - "User"
      summary: "Register a new user"
      parameters:
        - name: "body"
          in: "body"
          schema:
            type: "object"
            properties: 
              nickname:
                type: "string"
      responses:
        "201":
          description: "User created"

  /user/{id}:
    get:
      tags:
        - "User"
      summary: "Get one specific user"
      responses:
        "200":
          description: "User found"
          schema:
            $ref: "#/definitions/User"

definitions:
  User:
    type: "object"
    properties: 
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"

  Score:
    type: "object"
    properties: 
      userId:
        type: "integer"
        format: "uint64" 
      timestamp:
        type: "integer"
        format: "uint64"
      exerciseId:
        type: "integer"
        format: "uint8"
      score:
        type: "integer"
        format: "uint16"
  